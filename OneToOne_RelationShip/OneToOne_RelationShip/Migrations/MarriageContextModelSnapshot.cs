// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace OneToOne_RelationShip.Migrations
{
    [DbContext(typeof(MarriageContext))]
    partial class MarriageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Husband", b =>
                {
                    b.Property<int>("HusbandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HusbandId"), 1L, 1);

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HusbandId");

                    b.ToTable("Husbands");
                });

            modelBuilder.Entity("Wife", b =>
                {
                    b.Property<int>("WifeId")
                        .HasColumnType("int");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WifeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WifeId");

                    b.ToTable("Wives");
                });

            modelBuilder.Entity("Wife", b =>
                {
                    b.HasOne("Husband", "Husband")
                        .WithOne("Wife")
                        .HasForeignKey("Wife", "WifeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Husband");
                });

            modelBuilder.Entity("Husband", b =>
                {
                    b.Navigation("Wife")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
